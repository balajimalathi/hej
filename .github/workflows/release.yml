name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build binaries
        run: |
          mkdir -p dist
          BIN_NAME="hej-${{ matrix.goos }}-${{ matrix.goarch }}-nightly"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
            go build -ldflags="-s -w" -o dist/$BIN_NAME hej.go

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hej-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/') # only run for tags
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten dist directory
        run: |
          mkdir flat-dist
          find dist -type f -exec mv {} flat-dist/ \;

          # Rename Windows binaries to have .exe extension
          for f in flat-dist/*-windows-*; do
            if [ -f "$f" ] && [[ "$f" != *.exe ]]; then
              mv "$f" "$f.exe"
            fi
          done

          # Add version suffix to all binaries
          VERSION="${GITHUB_REF_NAME}"
          for f in flat-dist/*; do
            base=$(basename "$f")
            mv "$f" "flat-dist/${base}-${VERSION}"
          done

          ls -lh flat-dist

      - name: Publish release
        run: |
          VERSION="${GITHUB_REF_NAME}"

          gh release create "$VERSION" flat-dist/* \
            --title "Release $VERSION" \
            --notes "Automated release for version $VERSION." \
            --latest

        env:
          GH_TOKEN: ${{ github.token }}
